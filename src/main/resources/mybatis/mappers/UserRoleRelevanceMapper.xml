<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.forum.repository.mapper.UserRoleRelevanceMapper" >
  <resultMap id="BaseResultMap" type="com.forum.repository.domain.UserRoleRelevance" >
    <id column="pk_user_role_relevance_id" property="pkUserRoleRelevanceId" jdbcType="BIGINT" />
    <result column="fk_user_id" property="fkUserId" jdbcType="BIGINT" />
    <result column="fk_role_id" property="fkRoleId" jdbcType="BIGINT" />
    <result column="CREATED_TIME" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="UPDATED_TIME" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="is_del" property="isDel" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pk_user_role_relevance_id, fk_user_id, fk_role_id, CREATED_TIME, UPDATED_TIME, is_del
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_role_relevance
    where pk_user_role_relevance_id = #{pkUserRoleRelevanceId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_role_relevance
    where pk_user_role_relevance_id = #{pkUserRoleRelevanceId,jdbcType=BIGINT}
  </delete>
  <select id="selectObjectListByWhere" resultMap="BaseResultMap" parameterType="com.forum.repository.domain.UserRoleRelevance" >
    select 
    <include refid="Base_Column_List" />
    from user_role_relevance
    <where >
      <if test="fkUserId != null" >
        and fk_user_id = #{fkUserId,jdbcType=BIGINT}
      </if>
      <if test="fkRoleId != null" >
        and fk_role_id = #{fkRoleId,jdbcType=BIGINT}
      </if>
      <if test="createdTime != null" >
        and to_days(CREATED_TIME) = to_days(#{createdTime,jdbcType=TIMESTAMP})
      </if>
      <if test="updatedTime != null" >
        and to_days(UPDATED_TIME) = to_days(#{updatedTime,jdbcType=TIMESTAMP})
      </if>
      <if test="isDel != null" >
        and is_del = #{isDel,jdbcType=BIT}
      </if>
    </where>
  </select>
  <select id="selectByBillId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from user_role_relevance
    <where >
      <if test="selective != null" >
        <if test="selective.fkUserId != null" >
          and fk_user_id = #{selective.fkUserId,jdbcType=BIGINT}
        </if>
        <if test="selective.fkRoleId != null" >
          and fk_role_id = #{selective.fkRoleId,jdbcType=BIGINT}
        </if>
        <if test="selective.createdTime != null" >
          and to_days(CREATED_TIME) = to_days(#{selective.createdTime,jdbcType=TIMESTAMP})
        </if>
        <if test="selective.updatedTime != null" >
          and to_days(UPDATED_TIME) = to_days(#{selective.updatedTime,jdbcType=TIMESTAMP})
        </if>
        <if test="selective.isDel != null" >
          and is_del = #{selective.isDel,jdbcType=BIT}
        </if>
      </if>
      <if test="ids != null" >
        and pk_user_role_relevance_id in (<foreach collection="ids" separator="," item="item"> #{item} </foreach>)
      </if>
    </where>
  </select>
  <select id="selectCountByWhere" resultType="java.lang.Integer" parameterType="com.forum.repository.domain.UserRoleRelevance" >
    select 
     count(1) 
    from user_role_relevance
    <where >
      <if test="fkUserId != null" >
        and fk_user_id = #{fkUserId,jdbcType=BIGINT}
      </if>
      <if test="fkRoleId != null" >
        and fk_role_id = #{fkRoleId,jdbcType=BIGINT}
      </if>
      <if test="createdTime != null" >
        and to_days(CREATED_TIME) = to_days(#{createdTime,jdbcType=TIMESTAMP})
      </if>
      <if test="updatedTime != null" >
        and to_days(UPDATED_TIME) = to_days(#{updatedTime,jdbcType=TIMESTAMP})
      </if>
      <if test="isDel != null" >
        and is_del = #{isDel,jdbcType=BIT}
      </if>
    </where>
  </select>
  <insert id="insert" parameterType="com.forum.repository.domain.UserRoleRelevance" useGeneratedKeys="true" keyProperty="pkUserRoleRelevanceId" >
    insert into user_role_relevance (pk_user_role_relevance_id, fk_user_id, fk_role_id, 
      CREATED_TIME, UPDATED_TIME, is_del
      )
    values (#{pkUserRoleRelevanceId,jdbcType=BIGINT}, #{fkUserId,jdbcType=BIGINT}, #{fkRoleId,jdbcType=BIGINT}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=BIT}
      )
  </insert>
  <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" >
    insert into user_role_relevance (pk_user_role_relevance_id, 
      fk_user_id, fk_role_id, CREATED_TIME, 
      UPDATED_TIME, is_del)
    values 
 <foreach collection="records" separator="," item="item">  (#{item.pkUserRoleRelevanceId,jdbcType=BIGINT}, 
      #{item.fkUserId,jdbcType=BIGINT}, #{item.fkRoleId,jdbcType=BIGINT}, #{item.createdTime,jdbcType=TIMESTAMP}, 
      #{item.updatedTime,jdbcType=TIMESTAMP}, #{item.isDel,jdbcType=BIT})  
 </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.forum.repository.domain.UserRoleRelevance" useGeneratedKeys="true" keyProperty="pkUserRoleRelevanceId" >
    insert into user_role_relevance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pkUserRoleRelevanceId != null" >
        pk_user_role_relevance_id,
      </if>
      <if test="fkUserId != null" >
        fk_user_id,
      </if>
      <if test="fkRoleId != null" >
        fk_role_id,
      </if>
      <if test="createdTime != null" >
        CREATED_TIME,
      </if>
      <if test="updatedTime != null" >
        UPDATED_TIME,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pkUserRoleRelevanceId != null" >
        #{pkUserRoleRelevanceId,jdbcType=BIGINT},
      </if>
      <if test="fkUserId != null" >
        #{fkUserId,jdbcType=BIGINT},
      </if>
      <if test="fkRoleId != null" >
        #{fkRoleId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.forum.repository.domain.UserRoleRelevance" >
    update user_role_relevance
    <set >
      <if test="fkUserId != null" >
        fk_user_id = #{fkUserId,jdbcType=BIGINT},
      </if>
      <if test="fkRoleId != null" >
        fk_role_id = #{fkRoleId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=BIT},
      </if>
    </set>
    where pk_user_role_relevance_id = #{pkUserRoleRelevanceId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.forum.repository.domain.UserRoleRelevance" >
    update user_role_relevance
    set fk_user_id = #{fkUserId,jdbcType=BIGINT},
      fk_role_id = #{fkRoleId,jdbcType=BIGINT},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=BIT}
    where pk_user_role_relevance_id = #{pkUserRoleRelevanceId,jdbcType=BIGINT}
  </update>
</mapper>